name: 🚀 CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'

jobs:
  # 📋 코드 품질 검사
  lint-and-format:
    name: 🔍 Lint & Format Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🔍 Run ESLint
        run: npm run lint

      - name: 🎨 Check Prettier formatting
        run: npm run format:check

  # 🧪 테스트 실행
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: lint-and-format

    strategy:
      matrix:
        node-version: [16, 18, 20]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🧪 Run tests
        run: npm test -- --coverage --watchAll=false

      - name: 📊 Upload coverage reports
        if: matrix.node-version == 18
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella

  # 🏗️ 빌드 테스트
  build:
    name: 🏗️ Build Test
    runs-on: ubuntu-latest
    needs: [lint-and-format, test]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 📊 Analyze bundle size
        run: |
          npm install -g bundlesize
          bundlesize

      - name: 💾 Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: build/
          retention-days: 7

  # 🔒 보안 검사
  security:
    name: 🔒 Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 🔒 Run security audit
        run: npm audit --audit-level moderate

      - name: 🔍 Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: javascript

      - name: 🏗️ Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # 📱 크로스 브라우저 테스트
  e2e-test:
    name: 🌐 E2E Browser Tests
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'

    strategy:
      matrix:
        browser: [chrome, firefox, edge]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 💾 Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: build/

      - name: 🌐 Run E2E tests on ${{ matrix.browser }}
        run: |
          npm run serve &
          sleep 10
          npm run test:e2e -- --browser=${{ matrix.browser }}

  # 📋 타입 체크
  typecheck:
    name: 📋 TypeScript Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 📋 Run TypeScript type check
        run: npx tsc --noEmit

  # 🚀 배포 (main 브랜치만)
  deploy:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [lint-and-format, test, build, security, typecheck]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    environment:
      name: production
      url: https://your-production-url.com

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🏗️ Build for production
        run: npm run build
        env:
          REACT_APP_VERSION: ${{ github.sha }}

      - name: 🚀 Deploy to Netlify/Vercel
        # 실제 배포 설정에 따라 수정
        run: |
          echo "🚀 Deploying to production..."
          # 배포 명령어 추가

  # 📊 릴리즈 노트 생성
  release:
    name: 📊 Create Release
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📊 Generate Release Notes
        uses: actions/github-script@v6
        with:
          script: |
            const { execSync } = require('child_process');
            const lastTag = execSync('git describe --tags --abbrev=0', { encoding: 'utf8' }).trim();
            const commits = execSync(`git log ${lastTag}..HEAD --oneline`, { encoding: 'utf8' });

            console.log('🎉 New commits since last release:');
            console.log(commits);

  # 📋 의존성 업데이트 확인
  dependency-review:
    name: 📋 Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📋 Dependency Review
        uses: actions/dependency-review-action@v3
        with:
          fail-on-severity: moderate
